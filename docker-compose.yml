version: '3'
services:
  rabbitmq:
    image: rabbitmq:3.12.2-management
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    networks:
      - rabbit_network
    ports:
      - "5672:5672"
      - "15672:15672"

  db:
    image: 'mysql/mysql-server:latest'
    environment:
      MYSQL_ROOT_PASSWORD: 'password!23'
      MYSQL_ROOT_HOST: '%'
      MYSQL_DATABASE: 'modelsDb'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'password'
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
    volumes:
      - './volumes/database:/var/lib/mysql'
    networks:
      - rabbit_network

  socket.right:
    command: sh -c "npm install && npm run start"
    build: ./consumer/socket.instance
    volumes:
      - ./consumer/socket.instance:/usr/src/app
    networks:
      - rabbit_network
    depends_on:
      - redis.socket
    environment:
      - SERVER_NAME=socket.right

  socket.left:
      command: sh -c "npm install && npm run start"
      build: ./consumer/socket.instance
      volumes:
        - ./consumer/socket.instance:/usr/src/app
      networks:
        - rabbit_network
      depends_on:
        - redis.socket
      environment:
        - SERVER_NAME=socket.left

  socket.emitter:
    build: ./consumer/socket.emitter
    command: sh -c "npm install && npm run start"
    volumes:
      - ./consumer/socket.emitter:/usr/src/app
    networks:
      - rabbit_network
    expose:
      - "3000"
    environment:
      - NAME=emitter
    depends_on:
      - rabbitmq
      - redis.socket

  redis.socket:
    image: 'redis:alpine'
    volumes:
      - './volumes/db/redis/sockets:/data'
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    networks:
      - rabbit_network

  api:
    build:
      context: ./ShuttleX_task_api
      dockerfile: Dockerfile
    networks:
      - rabbit_network
    depends_on:
      - db
      - rabbitmq

  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - rabbit_network
    depends_on:
      - db
      - rabbitmq
      - api
    ports:
      - "80:80"

networks:
  rabbit_network:
    driver: bridge